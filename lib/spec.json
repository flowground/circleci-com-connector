{
    "openapi": "3.0.0",
    "servers": [
        {
            "url": "https://circleci.com/api/v1"
        }
    ],
    "info": {
        "description": "The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI.\nYou can access all information and trigger all actions.\nThe only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI.\n",
        "license": {
            "name": "Attribution-NonCommercial-ShareAlike 4.0 International",
            "url": "http://creativecommons.org/licenses/by-nc-sa/4.0/"
        },
        "title": "CircleCI",
        "version": "v1",
        "x-apisguru-categories": [
            "developer_tools"
        ],
        "x-logo": {
            "url": "https://api.apis.guru/v2/cache/logo/https_avatars0.githubusercontent.com_u_1231870.png"
        },
        "x-origin": [
            {
                "format": "swagger",
                "url": "https://raw.githubusercontent.com/blockenio/spec-circleci/master/swagger.yml",
                "version": "2.0"
            }
        ],
        "x-preferred": true,
        "x-providerName": "circleci.com",
        "x-unofficialSpec": true
    },
    "security": [
        {
            "apikey": []
        }
    ],
    "paths": {
        "/me": {
            "get": {
                "description": "Provides information about the signed in user.\n",
                "responses": {
                    "200": {
                        "description": "signed in user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "admin": {
                                            "type": "boolean"
                                        },
                                        "all_emails": {
                                            "items": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "analytics_id": {
                                            "type": "string"
                                        },
                                        "avatar_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "basic_email_prefs": {
                                            "type": "string"
                                        },
                                        "bitbucket": {
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "bitbucket_authorized": {
                                            "type": "boolean"
                                        },
                                        "containers": {
                                            "type": "integer"
                                        },
                                        "created_at": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "days_left_in_trial": {
                                            "type": "integer"
                                        },
                                        "dev_admin": {
                                            "type": "boolean"
                                        },
                                        "enrolled_betas": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "github_id": {
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "github_oauth_scopes": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "gravatar_id": {
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "heroku_api_key": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "in_beta_program": {
                                            "type": "boolean"
                                        },
                                        "login": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "organization_prefs": {
                                            "type": "object"
                                        },
                                        "parallelism": {
                                            "type": "integer"
                                        },
                                        "plan": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "projects": {
                                            "type": "object"
                                        },
                                        "pusher_id": {
                                            "type": "string"
                                        },
                                        "selected_email": {
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "sign_in_count": {
                                            "type": "integer"
                                        },
                                        "trial_end": {
                                            "format": "date-time",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}": {
            "get": {
                "description": "Build summary for each of the last 30 builds for a single git repo.\n",
                "parameters": [
                    {
                        "description": "The number of builds to return. Maximum 100, defaults to 30.\n",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "default": 30
                        }
                    },
                    {
                        "description": "The API returns builds starting from this offset, defaults to 0.\n",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    },
                    {
                        "description": "Restricts which builds are returned.\nSet to \"completed\", \"successful\", \"failed\", \"running\", or defaults to no filter.\n",
                        "in": "query",
                        "name": "filter",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "successful",
                                "failed",
                                "running"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Build summary for each of the last 30 builds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "body": {
                                                "description": "commit message body",
                                                "type": "string"
                                            },
                                            "branch": {
                                                "type": "string"
                                            },
                                            "build_time_millis": {
                                                "type": "integer"
                                            },
                                            "build_url": {
                                                "format": "uri",
                                                "type": "string"
                                            },
                                            "committer_email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "committer_name": {
                                                "type": "string"
                                            },
                                            "dont_build": {
                                                "description": "reason why we didn't build, if we didn't build",
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "lifecycle": {
                                                "enum": [
                                                    "queued",
                                                    "scheduled",
                                                    "not_run",
                                                    "not_running",
                                                    "running",
                                                    "finished"
                                                ],
                                                "type": "string"
                                            },
                                            "previous": {
                                                "description": "previous build",
                                                "properties": {
                                                    "build_num": {
                                                        "type": "integer"
                                                    },
                                                    "build_time_millis": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "retried",
                                                            "canceled",
                                                            "infrastructure_fail",
                                                            "timedout",
                                                            "not_run",
                                                            "running",
                                                            "failed",
                                                            "queued",
                                                            "scheduled",
                                                            "not_running",
                                                            "no_tests",
                                                            "fixed",
                                                            "success"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "queued_at": {
                                                "description": "time build was queued",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "reponame": {
                                                "type": "string"
                                            },
                                            "retry_of": {
                                                "description": "build_num of the build this is a retry of",
                                                "type": "integer",
                                                "nullable": true
                                            },
                                            "start_time": {
                                                "description": "time build started",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "stop_time": {
                                                "description": "time build finished",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "subject": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "vcs_url": {
                                                "format": "uri",
                                                "type": "string"
                                            },
                                            "why": {
                                                "description": "short string explaining the reason we built",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Triggers a new build, returns a summary of the build.\n",
                "responses": {
                    "201": {
                        "description": "returns a summary of the build",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "added_at": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "build_num": {
                                            "type": "integer"
                                        },
                                        "outcome": {
                                            "enum": [
                                                "canceled",
                                                "infrastructure_fail",
                                                "timedout",
                                                "failed",
                                                "no_tests",
                                                "success"
                                            ],
                                            "type": "string"
                                        },
                                        "pushed_at": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "status": {
                                            "enum": [
                                                "retried",
                                                "canceled",
                                                "infrastructure_fail",
                                                "timedout",
                                                "not_run",
                                                "running",
                                                "failed",
                                                "queued",
                                                "scheduled",
                                                "not_running",
                                                "no_tests",
                                                "fixed",
                                                "success"
                                            ],
                                            "type": "string"
                                        },
                                        "vcs_revision": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "build_parameters": {
                                        "description": "Additional environment variables to inject into the build environment. A map of names to values.\n",
                                        "type": "object"
                                    },
                                    "parallel": {
                                        "description": "The number of containers to use to run the build. Default is null and the project default is used.\n",
                                        "type": "string"
                                    },
                                    "revision": {
                                        "description": "The specific revision to build.\nDefault is null and the head of the branch is used. Cannot be used with tag parameter.\n",
                                        "type": "string"
                                    },
                                    "tag": {
                                        "description": "The tag to build. Default is null. Cannot be used with revision parameter.\n",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}/build-cache": {
            "delete": {
                "description": "Clears the cache for a project.\n",
                "responses": {
                    "200": {
                        "description": "status message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/project/{username}/{project}/checkout-key": {
            "get": {
                "description": "Lists checkout keys.\n",
                "responses": {
                    "200": {
                        "description": "checkout keys",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "fingerprint": {
                                                "type": "string"
                                            },
                                            "preferred": {
                                                "type": "boolean"
                                            },
                                            "public_key": {
                                                "type": "string"
                                            },
                                            "time": {
                                                "description": "when the key was issued",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "type": {
                                                "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                                                "enum": [
                                                    "deploy-key",
                                                    "github-user-key"
                                                ],
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new checkout key.\nOnly usable with a user API token.\n",
                "responses": {
                    "200": {
                        "description": "checkout key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fingerprint": {
                                            "type": "string"
                                        },
                                        "preferred": {
                                            "type": "boolean"
                                        },
                                        "public_key": {
                                            "type": "string"
                                        },
                                        "time": {
                                            "description": "when the key was issued",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                                            "enum": [
                                                "deploy-key",
                                                "github-user-key"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "enum": [
                                    "deploy-key",
                                    "github-user-key"
                                ],
                                "type": "string"
                            }
                        }
                    },
                    "description": "The type of key to create. Can be 'deploy-key' or 'github-user-key'.\n"
                }
            }
        },
        "/project/{username}/{project}/checkout-key/{fingerprint}": {
            "delete": {
                "description": "Delete a checkout key.\n",
                "responses": {
                    "200": {
                        "description": "status message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "enum": [
                                                "OK"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Get a checkout key.\n",
                "responses": {
                    "200": {
                        "description": "checkout key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "fingerprint": {
                                            "type": "string"
                                        },
                                        "preferred": {
                                            "type": "boolean"
                                        },
                                        "public_key": {
                                            "type": "string"
                                        },
                                        "time": {
                                            "description": "when the key was issued",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "type": {
                                            "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                                            "enum": [
                                                "deploy-key",
                                                "github-user-key"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "fingerprint",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/project/{username}/{project}/envvar": {
            "get": {
                "description": "Lists the environment variables for :project\n",
                "responses": {
                    "200": {
                        "description": "XXX",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Creates a new environment variable\n",
                "responses": {
                    "200": {
                        "description": "XXX",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}/envvar/{name}": {
            "delete": {
                "description": "Deletes the environment variable named ':name'\n",
                "responses": {
                    "200": {
                        "description": "Deletes the environment variable named ':name'\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "enum": [
                                                "OK"
                                            ],
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "description": "Gets the hidden value of environment variable :name\n",
                "responses": {
                    "200": {
                        "description": "XXX",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "name",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ]
        },
        "/project/{username}/{project}/ssh-key": {
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Create an ssh key used to access external systems that require SSH key-based authentication\n",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Content-Type",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "application/json"
                            ]
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "no response expected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "message": "a private key is required"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hostname": {
                                        "type": "string"
                                    },
                                    "private_key": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                }
            }
        },
        "/project/{username}/{project}/tree/{branch}": {
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "The branch name should be url-encoded.\n",
                    "in": "path",
                    "name": "branch",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "description": "Triggers a new build, returns a summary of the build.\nOptional build parameters can be set using an experimental API.\n\nNote: For more about build parameters, read about [using parameterized builds](https://circleci.com/docs/parameterized-builds/)\n",
                "responses": {
                    "201": {
                        "description": "returns a summary of the build",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string",
                                    "format": "uri"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "body": {
                                            "description": "commit message body",
                                            "type": "string"
                                        },
                                        "branch": {
                                            "type": "string"
                                        },
                                        "build_time_millis": {
                                            "type": "integer"
                                        },
                                        "build_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "committer_email": {
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "committer_name": {
                                            "type": "string"
                                        },
                                        "dont_build": {
                                            "description": "reason why we didn't build, if we didn't build",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "lifecycle": {
                                            "enum": [
                                                "queued",
                                                "scheduled",
                                                "not_run",
                                                "not_running",
                                                "running",
                                                "finished"
                                            ],
                                            "type": "string"
                                        },
                                        "previous": {
                                            "description": "previous build",
                                            "properties": {
                                                "build_num": {
                                                    "type": "integer"
                                                },
                                                "build_time_millis": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "retried",
                                                        "canceled",
                                                        "infrastructure_fail",
                                                        "timedout",
                                                        "not_run",
                                                        "running",
                                                        "failed",
                                                        "queued",
                                                        "scheduled",
                                                        "not_running",
                                                        "no_tests",
                                                        "fixed",
                                                        "success"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "queued_at": {
                                            "description": "time build was queued",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "reponame": {
                                            "type": "string"
                                        },
                                        "retry_of": {
                                            "description": "build_num of the build this is a retry of",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "start_time": {
                                            "description": "time build started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "stop_time": {
                                            "description": "time build finished",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "vcs_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "why": {
                                            "description": "short string explaining the reason we built",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "build_parameters": {
                                        "description": "Additional environment variables to inject into the build environment. A map of names to values.\n",
                                        "type": "object"
                                    },
                                    "parallel": {
                                        "description": "The number of containers to use to run the build. Default is null and the project default is used.\n",
                                        "type": "string"
                                    },
                                    "revision": {
                                        "description": "The specific revision to build.\nDefault is null and the head of the branch is used. Cannot be used with tag parameter.\n",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}/{build_num}": {
            "get": {
                "description": "Full details for a single build. The response includes all of the fields from the build summary.\nThis is also the payload for the [notification webhooks](/docs/configuration/#notify), in which case this object is the value to a key named 'payload'.\n",
                "responses": {
                    "200": {
                        "description": "Full details for a single build",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "previous build",
                                    "properties": {
                                        "all_commit_details": {
                                            "items": {
                                                "properties": {
                                                    "author_date": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "author_email": {
                                                        "format": "email",
                                                        "type": "string"
                                                    },
                                                    "author_login": {
                                                        "type": "string"
                                                    },
                                                    "author_name": {
                                                        "type": "string"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    },
                                                    "commit": {
                                                        "type": "string"
                                                    },
                                                    "commit_url": {
                                                        "format": "uri",
                                                        "type": "string"
                                                    },
                                                    "committer_date": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "committer_email": {
                                                        "format": "email",
                                                        "type": "string"
                                                    },
                                                    "committer_login": {
                                                        "type": "string"
                                                    },
                                                    "committer_name": {
                                                        "type": "string"
                                                    },
                                                    "subject": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "compare": {
                                            "format": "uri",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "job_name": {
                                            "type": "string"
                                        },
                                        "node": {
                                            "nullable": true
                                        },
                                        "previous_successful_build": {
                                            "description": "previous build",
                                            "properties": {
                                                "build_num": {
                                                    "type": "integer"
                                                },
                                                "build_time_millis": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "retried",
                                                        "canceled",
                                                        "infrastructure_fail",
                                                        "timedout",
                                                        "not_run",
                                                        "running",
                                                        "failed",
                                                        "queued",
                                                        "scheduled",
                                                        "not_running",
                                                        "no_tests",
                                                        "fixed",
                                                        "success"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "retries": {
                                            "type": "boolean",
                                            "nullable": true
                                        },
                                        "ssh_enabled": {
                                            "type": "boolean",
                                            "nullable": true
                                        },
                                        "timedout": {
                                            "type": "boolean",
                                            "nullable": true
                                        },
                                        "usage_queued_at": {
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "admin": {
                                                    "type": "boolean"
                                                },
                                                "all_emails": {
                                                    "items": {
                                                        "format": "email",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "analytics_id": {
                                                    "type": "string"
                                                },
                                                "avatar_url": {
                                                    "format": "uri",
                                                    "type": "string"
                                                },
                                                "basic_email_prefs": {
                                                    "type": "string"
                                                },
                                                "bitbucket": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "bitbucket_authorized": {
                                                    "type": "boolean"
                                                },
                                                "containers": {
                                                    "type": "integer"
                                                },
                                                "created_at": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                },
                                                "days_left_in_trial": {
                                                    "type": "integer"
                                                },
                                                "dev_admin": {
                                                    "type": "boolean"
                                                },
                                                "enrolled_betas": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "github_id": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "github_oauth_scopes": {
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "gravatar_id": {
                                                    "type": "integer",
                                                    "nullable": true
                                                },
                                                "heroku_api_key": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "in_beta_program": {
                                                    "type": "boolean"
                                                },
                                                "login": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "organization_prefs": {
                                                    "type": "object"
                                                },
                                                "parallelism": {
                                                    "type": "integer"
                                                },
                                                "plan": {
                                                    "type": "string",
                                                    "nullable": true
                                                },
                                                "projects": {
                                                    "type": "object"
                                                },
                                                "pusher_id": {
                                                    "type": "string"
                                                },
                                                "selected_email": {
                                                    "format": "email",
                                                    "type": "string"
                                                },
                                                "sign_in_count": {
                                                    "type": "integer"
                                                },
                                                "trial_end": {
                                                    "format": "date-time",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "build_num",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/project/{username}/{project}/{build_num}/artifacts": {
            "get": {
                "description": "List the artifacts produced by a given build.\n",
                "responses": {
                    "200": {
                        "description": "List the artifacts produced by a given build",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "node_index": {
                                                "type": "integer"
                                            },
                                            "path": {
                                                "type": "string"
                                            },
                                            "pretty_path": {
                                                "type": "string"
                                            },
                                            "url": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "build_num",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/project/{username}/{project}/{build_num}/cancel": {
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "build_num",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "description": "Cancels the build, returns a summary of the build.\n",
                "responses": {
                    "200": {
                        "description": "returns a summary of the build",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "body": {
                                            "description": "commit message body",
                                            "type": "string"
                                        },
                                        "branch": {
                                            "type": "string"
                                        },
                                        "build_time_millis": {
                                            "type": "integer"
                                        },
                                        "build_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "committer_email": {
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "committer_name": {
                                            "type": "string"
                                        },
                                        "dont_build": {
                                            "description": "reason why we didn't build, if we didn't build",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "lifecycle": {
                                            "enum": [
                                                "queued",
                                                "scheduled",
                                                "not_run",
                                                "not_running",
                                                "running",
                                                "finished"
                                            ],
                                            "type": "string"
                                        },
                                        "previous": {
                                            "description": "previous build",
                                            "properties": {
                                                "build_num": {
                                                    "type": "integer"
                                                },
                                                "build_time_millis": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "retried",
                                                        "canceled",
                                                        "infrastructure_fail",
                                                        "timedout",
                                                        "not_run",
                                                        "running",
                                                        "failed",
                                                        "queued",
                                                        "scheduled",
                                                        "not_running",
                                                        "no_tests",
                                                        "fixed",
                                                        "success"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "queued_at": {
                                            "description": "time build was queued",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "reponame": {
                                            "type": "string"
                                        },
                                        "retry_of": {
                                            "description": "build_num of the build this is a retry of",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "start_time": {
                                            "description": "time build started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "stop_time": {
                                            "description": "time build finished",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "vcs_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "why": {
                                            "description": "short string explaining the reason we built",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}/{build_num}/retry": {
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "build_num",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ],
            "post": {
                "description": "Retries the build, returns a summary of the new build.\n",
                "responses": {
                    "200": {
                        "description": "returns a summary of the new build",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "body": {
                                            "description": "commit message body",
                                            "type": "string"
                                        },
                                        "branch": {
                                            "type": "string"
                                        },
                                        "build_time_millis": {
                                            "type": "integer"
                                        },
                                        "build_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "committer_email": {
                                            "format": "email",
                                            "type": "string"
                                        },
                                        "committer_name": {
                                            "type": "string"
                                        },
                                        "dont_build": {
                                            "description": "reason why we didn't build, if we didn't build",
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "lifecycle": {
                                            "enum": [
                                                "queued",
                                                "scheduled",
                                                "not_run",
                                                "not_running",
                                                "running",
                                                "finished"
                                            ],
                                            "type": "string"
                                        },
                                        "previous": {
                                            "description": "previous build",
                                            "properties": {
                                                "build_num": {
                                                    "type": "integer"
                                                },
                                                "build_time_millis": {
                                                    "type": "integer"
                                                },
                                                "status": {
                                                    "enum": [
                                                        "retried",
                                                        "canceled",
                                                        "infrastructure_fail",
                                                        "timedout",
                                                        "not_run",
                                                        "running",
                                                        "failed",
                                                        "queued",
                                                        "scheduled",
                                                        "not_running",
                                                        "no_tests",
                                                        "fixed",
                                                        "success"
                                                    ],
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "queued_at": {
                                            "description": "time build was queued",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "reponame": {
                                            "type": "string"
                                        },
                                        "retry_of": {
                                            "description": "build_num of the build this is a retry of",
                                            "type": "integer",
                                            "nullable": true
                                        },
                                        "start_time": {
                                            "description": "time build started",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "stop_time": {
                                            "description": "time build finished",
                                            "format": "date-time",
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "username": {
                                            "type": "string"
                                        },
                                        "vcs_url": {
                                            "format": "uri",
                                            "type": "string"
                                        },
                                        "why": {
                                            "description": "short string explaining the reason we built",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/{username}/{project}/{build_num}/tests": {
            "get": {
                "description": "Provides test metadata for a build\nNote: [Learn how to set up your builds to collect test metadata](https://circleci.com/docs/test-metadata/)\n",
                "responses": {
                    "200": {
                        "description": "test metadata for a build\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "tests": {
                                            "items": {
                                                "properties": {
                                                    "classname": {
                                                        "type": "string"
                                                    },
                                                    "file": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "result": {
                                                        "enum": [
                                                            "retried",
                                                            "canceled",
                                                            "infrastructure_fail",
                                                            "timedout",
                                                            "not_run",
                                                            "running",
                                                            "failed",
                                                            "queued",
                                                            "scheduled",
                                                            "not_running",
                                                            "no_tests",
                                                            "fixed",
                                                            "success"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "run_time": {
                                                        "type": "number"
                                                    },
                                                    "source": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "parameters": [
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "username",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXX\n",
                    "in": "path",
                    "name": "project",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "description": "XXXXXXXXXX\n",
                    "in": "path",
                    "name": "build_num",
                    "required": true,
                    "schema": {
                        "type": "integer"
                    }
                }
            ]
        },
        "/projects": {
            "get": {
                "description": "List of all the projects you're following on CircleCI, with build information organized by branch.\n",
                "responses": {
                    "200": {
                        "description": "List of all the projects you're following on CircleCI\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "aws": {
                                                "properties": {
                                                    "keypair": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "branches": {
                                                "type": "object"
                                            },
                                            "campfire_notify_prefs": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "campfire_room": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "campfire_subdomain": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "campfire_token": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "compile": {
                                                "type": "string"
                                            },
                                            "default_branch": {
                                                "type": "string"
                                            },
                                            "dependencies": {
                                                "type": "string"
                                            },
                                            "extra": {
                                                "type": "string"
                                            },
                                            "feature_flags": {
                                                "properties": {
                                                    "build-fork-prs": {
                                                        "type": "boolean"
                                                    },
                                                    "fleet": {
                                                        "type": "boolean",
                                                        "nullable": true
                                                    },
                                                    "junit": {
                                                        "type": "boolean"
                                                    },
                                                    "oss": {
                                                        "type": "boolean"
                                                    },
                                                    "osx": {
                                                        "type": "boolean"
                                                    },
                                                    "set-github-status": {
                                                        "type": "boolean"
                                                    },
                                                    "trusty-beta": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "flowdock_api_token": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "followed": {
                                                "type": "boolean"
                                            },
                                            "has_usable_key": {
                                                "type": "boolean"
                                            },
                                            "heroku_deploy_user": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hipchat_api_token": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hipchat_notify": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hipchat_notify_prefs": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "hipchat_room": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_channel": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_keyword": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_notify_prefs": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_password": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_server": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "irc_username": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "language": {
                                                "type": "string"
                                            },
                                            "oss": {
                                                "type": "boolean"
                                            },
                                            "parallel": {
                                                "type": "integer"
                                            },
                                            "reponame": {
                                                "type": "string"
                                            },
                                            "scopes": {
                                                "items": {
                                                    "enum": [
                                                        "write-settings",
                                                        "view-builds",
                                                        "read-settings",
                                                        "trigger-builds",
                                                        "all",
                                                        "status",
                                                        "none"
                                                    ],
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "setup": {
                                                "type": "string"
                                            },
                                            "slack_api_token": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "slack_channel": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "slack_channel_override": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "slack_notify_prefs": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "slack_subdomain": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "slack_webhook_url": {
                                                "format": "uri",
                                                "type": "string"
                                            },
                                            "ssh_keys": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "test": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "vcs_type": {
                                                "type": "string"
                                            },
                                            "vcs_url": {
                                                "format": "uri",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recent-builds": {
            "get": {
                "description": "Build summary for each of the last 30 recent builds, ordered by build_num.\n",
                "parameters": [
                    {
                        "description": "The number of builds to return. Maximum 100, defaults to 30.\n",
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "default": 30
                        }
                    },
                    {
                        "description": "The API returns builds starting from this offset, defaults to 0.\n",
                        "in": "query",
                        "name": "offset",
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Build summary for each of the last 30 recent builds",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "properties": {
                                            "body": {
                                                "description": "commit message body",
                                                "type": "string"
                                            },
                                            "branch": {
                                                "type": "string"
                                            },
                                            "build_time_millis": {
                                                "type": "integer"
                                            },
                                            "build_url": {
                                                "format": "uri",
                                                "type": "string"
                                            },
                                            "committer_email": {
                                                "format": "email",
                                                "type": "string"
                                            },
                                            "committer_name": {
                                                "type": "string"
                                            },
                                            "dont_build": {
                                                "description": "reason why we didn't build, if we didn't build",
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "lifecycle": {
                                                "enum": [
                                                    "queued",
                                                    "scheduled",
                                                    "not_run",
                                                    "not_running",
                                                    "running",
                                                    "finished"
                                                ],
                                                "type": "string"
                                            },
                                            "previous": {
                                                "description": "previous build",
                                                "properties": {
                                                    "build_num": {
                                                        "type": "integer"
                                                    },
                                                    "build_time_millis": {
                                                        "type": "integer"
                                                    },
                                                    "status": {
                                                        "enum": [
                                                            "retried",
                                                            "canceled",
                                                            "infrastructure_fail",
                                                            "timedout",
                                                            "not_run",
                                                            "running",
                                                            "failed",
                                                            "queued",
                                                            "scheduled",
                                                            "not_running",
                                                            "no_tests",
                                                            "fixed",
                                                            "success"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "queued_at": {
                                                "description": "time build was queued",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "reponame": {
                                                "type": "string"
                                            },
                                            "retry_of": {
                                                "description": "build_num of the build this is a retry of",
                                                "type": "integer",
                                                "nullable": true
                                            },
                                            "start_time": {
                                                "description": "time build started",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "stop_time": {
                                                "description": "time build finished",
                                                "format": "date-time",
                                                "type": "string"
                                            },
                                            "subject": {
                                                "type": "string"
                                            },
                                            "username": {
                                                "type": "string"
                                            },
                                            "vcs_url": {
                                                "format": "uri",
                                                "type": "string"
                                            },
                                            "why": {
                                                "description": "short string explaining the reason we built",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/heroku-key": {
            "post": {
                "description": "Adds your Heroku API key to CircleCI, takes apikey as form param name.\n",
                "responses": {
                    "403": {
                        "description": "Your Heroku API key is invalid.\n",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Artifact": {
                "properties": {
                    "node_index": {
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "pretty_path": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Artifacts": {
                "items": {
                    "properties": {
                        "node_index": {
                            "type": "integer"
                        },
                        "path": {
                            "type": "string"
                        },
                        "pretty_path": {
                            "type": "string"
                        },
                        "url": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Aws": {
                "properties": {
                    "keypair": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Build": {
                "properties": {
                    "body": {
                        "description": "commit message body",
                        "type": "string"
                    },
                    "branch": {
                        "type": "string"
                    },
                    "build_time_millis": {
                        "type": "integer"
                    },
                    "build_url": {
                        "format": "uri",
                        "type": "string"
                    },
                    "committer_email": {
                        "format": "email",
                        "type": "string"
                    },
                    "committer_name": {
                        "type": "string"
                    },
                    "dont_build": {
                        "description": "reason why we didn't build, if we didn't build",
                        "type": "string",
                        "nullable": true
                    },
                    "lifecycle": {
                        "enum": [
                            "queued",
                            "scheduled",
                            "not_run",
                            "not_running",
                            "running",
                            "finished"
                        ],
                        "type": "string"
                    },
                    "previous": {
                        "description": "previous build",
                        "properties": {
                            "build_num": {
                                "type": "integer"
                            },
                            "build_time_millis": {
                                "type": "integer"
                            },
                            "status": {
                                "enum": [
                                    "retried",
                                    "canceled",
                                    "infrastructure_fail",
                                    "timedout",
                                    "not_run",
                                    "running",
                                    "failed",
                                    "queued",
                                    "scheduled",
                                    "not_running",
                                    "no_tests",
                                    "fixed",
                                    "success"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "queued_at": {
                        "description": "time build was queued",
                        "format": "date-time",
                        "type": "string"
                    },
                    "reponame": {
                        "type": "string"
                    },
                    "retry_of": {
                        "description": "build_num of the build this is a retry of",
                        "type": "integer",
                        "nullable": true
                    },
                    "start_time": {
                        "description": "time build started",
                        "format": "date-time",
                        "type": "string"
                    },
                    "stop_time": {
                        "description": "time build finished",
                        "format": "date-time",
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcs_url": {
                        "format": "uri",
                        "type": "string"
                    },
                    "why": {
                        "description": "short string explaining the reason we built",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "BuildDetail": {
                "description": "previous build",
                "properties": {
                    "all_commit_details": {
                        "items": {
                            "properties": {
                                "author_date": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "author_email": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "author_login": {
                                    "type": "string"
                                },
                                "author_name": {
                                    "type": "string"
                                },
                                "body": {
                                    "type": "string"
                                },
                                "commit": {
                                    "type": "string"
                                },
                                "commit_url": {
                                    "format": "uri",
                                    "type": "string"
                                },
                                "committer_date": {
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "committer_email": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "committer_login": {
                                    "type": "string"
                                },
                                "committer_name": {
                                    "type": "string"
                                },
                                "subject": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "compare": {
                        "format": "uri",
                        "type": "string",
                        "nullable": true
                    },
                    "job_name": {
                        "type": "string"
                    },
                    "node": {
                        "nullable": true
                    },
                    "previous_successful_build": {
                        "description": "previous build",
                        "properties": {
                            "build_num": {
                                "type": "integer"
                            },
                            "build_time_millis": {
                                "type": "integer"
                            },
                            "status": {
                                "enum": [
                                    "retried",
                                    "canceled",
                                    "infrastructure_fail",
                                    "timedout",
                                    "not_run",
                                    "running",
                                    "failed",
                                    "queued",
                                    "scheduled",
                                    "not_running",
                                    "no_tests",
                                    "fixed",
                                    "success"
                                ],
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "retries": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "ssh_enabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "timedout": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "usage_queued_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "user": {
                        "properties": {
                            "admin": {
                                "type": "boolean"
                            },
                            "all_emails": {
                                "items": {
                                    "format": "email",
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "analytics_id": {
                                "type": "string"
                            },
                            "avatar_url": {
                                "format": "uri",
                                "type": "string"
                            },
                            "basic_email_prefs": {
                                "type": "string"
                            },
                            "bitbucket": {
                                "type": "integer",
                                "nullable": true
                            },
                            "bitbucket_authorized": {
                                "type": "boolean"
                            },
                            "containers": {
                                "type": "integer"
                            },
                            "created_at": {
                                "format": "date-time",
                                "type": "string"
                            },
                            "days_left_in_trial": {
                                "type": "integer"
                            },
                            "dev_admin": {
                                "type": "boolean"
                            },
                            "enrolled_betas": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "github_id": {
                                "type": "integer",
                                "nullable": true
                            },
                            "github_oauth_scopes": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            },
                            "gravatar_id": {
                                "type": "integer",
                                "nullable": true
                            },
                            "heroku_api_key": {
                                "type": "string",
                                "nullable": true
                            },
                            "in_beta_program": {
                                "type": "boolean"
                            },
                            "login": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "organization_prefs": {
                                "type": "object"
                            },
                            "parallelism": {
                                "type": "integer"
                            },
                            "plan": {
                                "type": "string",
                                "nullable": true
                            },
                            "projects": {
                                "type": "object"
                            },
                            "pusher_id": {
                                "type": "string"
                            },
                            "selected_email": {
                                "format": "email",
                                "type": "string"
                            },
                            "sign_in_count": {
                                "type": "integer"
                            },
                            "trial_end": {
                                "format": "date-time",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BuildParameters": {
                "description": "Additional environment variables to inject into the build environment. A map of names to values.\n",
                "type": "object"
            },
            "BuildSummary": {
                "properties": {
                    "added_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "build_num": {
                        "type": "integer"
                    },
                    "outcome": {
                        "enum": [
                            "canceled",
                            "infrastructure_fail",
                            "timedout",
                            "failed",
                            "no_tests",
                            "success"
                        ],
                        "type": "string"
                    },
                    "pushed_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "enum": [
                            "retried",
                            "canceled",
                            "infrastructure_fail",
                            "timedout",
                            "not_run",
                            "running",
                            "failed",
                            "queued",
                            "scheduled",
                            "not_running",
                            "no_tests",
                            "fixed",
                            "success"
                        ],
                        "type": "string"
                    },
                    "vcs_revision": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Builds": {
                "items": {
                    "properties": {
                        "body": {
                            "description": "commit message body",
                            "type": "string"
                        },
                        "branch": {
                            "type": "string"
                        },
                        "build_time_millis": {
                            "type": "integer"
                        },
                        "build_url": {
                            "format": "uri",
                            "type": "string"
                        },
                        "committer_email": {
                            "format": "email",
                            "type": "string"
                        },
                        "committer_name": {
                            "type": "string"
                        },
                        "dont_build": {
                            "description": "reason why we didn't build, if we didn't build",
                            "type": "string",
                            "nullable": true
                        },
                        "lifecycle": {
                            "enum": [
                                "queued",
                                "scheduled",
                                "not_run",
                                "not_running",
                                "running",
                                "finished"
                            ],
                            "type": "string"
                        },
                        "previous": {
                            "description": "previous build",
                            "properties": {
                                "build_num": {
                                    "type": "integer"
                                },
                                "build_time_millis": {
                                    "type": "integer"
                                },
                                "status": {
                                    "enum": [
                                        "retried",
                                        "canceled",
                                        "infrastructure_fail",
                                        "timedout",
                                        "not_run",
                                        "running",
                                        "failed",
                                        "queued",
                                        "scheduled",
                                        "not_running",
                                        "no_tests",
                                        "fixed",
                                        "success"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "queued_at": {
                            "description": "time build was queued",
                            "format": "date-time",
                            "type": "string"
                        },
                        "reponame": {
                            "type": "string"
                        },
                        "retry_of": {
                            "description": "build_num of the build this is a retry of",
                            "type": "integer",
                            "nullable": true
                        },
                        "start_time": {
                            "description": "time build started",
                            "format": "date-time",
                            "type": "string"
                        },
                        "stop_time": {
                            "description": "time build finished",
                            "format": "date-time",
                            "type": "string"
                        },
                        "subject": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "vcs_url": {
                            "format": "uri",
                            "type": "string"
                        },
                        "why": {
                            "description": "short string explaining the reason we built",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "CommitDetail": {
                "properties": {
                    "author_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "author_email": {
                        "format": "email",
                        "type": "string"
                    },
                    "author_login": {
                        "type": "string"
                    },
                    "author_name": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "commit": {
                        "type": "string"
                    },
                    "commit_url": {
                        "format": "uri",
                        "type": "string"
                    },
                    "committer_date": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "committer_email": {
                        "format": "email",
                        "type": "string"
                    },
                    "committer_login": {
                        "type": "string"
                    },
                    "committer_name": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CommitDetails": {
                "items": {
                    "properties": {
                        "author_date": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "author_email": {
                            "format": "email",
                            "type": "string"
                        },
                        "author_login": {
                            "type": "string"
                        },
                        "author_name": {
                            "type": "string"
                        },
                        "body": {
                            "type": "string"
                        },
                        "commit": {
                            "type": "string"
                        },
                        "commit_url": {
                            "format": "uri",
                            "type": "string"
                        },
                        "committer_date": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "committer_email": {
                            "format": "email",
                            "type": "string"
                        },
                        "committer_login": {
                            "type": "string"
                        },
                        "committer_name": {
                            "type": "string"
                        },
                        "subject": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Envvar": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Envvars": {
                "items": {
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "value": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Key": {
                "properties": {
                    "fingerprint": {
                        "type": "string"
                    },
                    "preferred": {
                        "type": "boolean"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "time": {
                        "description": "when the key was issued",
                        "format": "date-time",
                        "type": "string"
                    },
                    "type": {
                        "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                        "enum": [
                            "deploy-key",
                            "github-user-key"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Keys": {
                "items": {
                    "properties": {
                        "fingerprint": {
                            "type": "string"
                        },
                        "preferred": {
                            "type": "boolean"
                        },
                        "public_key": {
                            "type": "string"
                        },
                        "time": {
                            "description": "when the key was issued",
                            "format": "date-time",
                            "type": "string"
                        },
                        "type": {
                            "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                            "enum": [
                                "deploy-key",
                                "github-user-key"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Lifecycle": {
                "enum": [
                    "queued",
                    "scheduled",
                    "not_run",
                    "not_running",
                    "running",
                    "finished"
                ],
                "type": "string"
            },
            "Outcome": {
                "enum": [
                    "canceled",
                    "infrastructure_fail",
                    "timedout",
                    "failed",
                    "no_tests",
                    "success"
                ],
                "type": "string"
            },
            "Parallel": {
                "description": "The number of containers to use to run the build. Default is null and the project default is used.\n",
                "type": "string"
            },
            "PreviousBuild": {
                "description": "previous build",
                "properties": {
                    "build_num": {
                        "type": "integer"
                    },
                    "build_time_millis": {
                        "type": "integer"
                    },
                    "status": {
                        "enum": [
                            "retried",
                            "canceled",
                            "infrastructure_fail",
                            "timedout",
                            "not_run",
                            "running",
                            "failed",
                            "queued",
                            "scheduled",
                            "not_running",
                            "no_tests",
                            "fixed",
                            "success"
                        ],
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Project": {
                "properties": {
                    "aws": {
                        "properties": {
                            "keypair": {
                                "type": "string",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "branches": {
                        "type": "object"
                    },
                    "campfire_notify_prefs": {
                        "type": "string",
                        "nullable": true
                    },
                    "campfire_room": {
                        "type": "string",
                        "nullable": true
                    },
                    "campfire_subdomain": {
                        "type": "string",
                        "nullable": true
                    },
                    "campfire_token": {
                        "type": "string",
                        "nullable": true
                    },
                    "compile": {
                        "type": "string"
                    },
                    "default_branch": {
                        "type": "string"
                    },
                    "dependencies": {
                        "type": "string"
                    },
                    "extra": {
                        "type": "string"
                    },
                    "feature_flags": {
                        "properties": {
                            "build-fork-prs": {
                                "type": "boolean"
                            },
                            "fleet": {
                                "type": "boolean",
                                "nullable": true
                            },
                            "junit": {
                                "type": "boolean"
                            },
                            "oss": {
                                "type": "boolean"
                            },
                            "osx": {
                                "type": "boolean"
                            },
                            "set-github-status": {
                                "type": "boolean"
                            },
                            "trusty-beta": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "flowdock_api_token": {
                        "type": "string",
                        "nullable": true
                    },
                    "followed": {
                        "type": "boolean"
                    },
                    "has_usable_key": {
                        "type": "boolean"
                    },
                    "heroku_deploy_user": {
                        "type": "string",
                        "nullable": true
                    },
                    "hipchat_api_token": {
                        "type": "string",
                        "nullable": true
                    },
                    "hipchat_notify": {
                        "type": "string",
                        "nullable": true
                    },
                    "hipchat_notify_prefs": {
                        "type": "string",
                        "nullable": true
                    },
                    "hipchat_room": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_channel": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_keyword": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_notify_prefs": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_password": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_server": {
                        "type": "string",
                        "nullable": true
                    },
                    "irc_username": {
                        "type": "string",
                        "nullable": true
                    },
                    "language": {
                        "type": "string"
                    },
                    "oss": {
                        "type": "boolean"
                    },
                    "parallel": {
                        "type": "integer"
                    },
                    "reponame": {
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "enum": [
                                "write-settings",
                                "view-builds",
                                "read-settings",
                                "trigger-builds",
                                "all",
                                "status",
                                "none"
                            ],
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "setup": {
                        "type": "string"
                    },
                    "slack_api_token": {
                        "type": "string",
                        "nullable": true
                    },
                    "slack_channel": {
                        "type": "string",
                        "nullable": true
                    },
                    "slack_channel_override": {
                        "type": "string",
                        "nullable": true
                    },
                    "slack_notify_prefs": {
                        "type": "string",
                        "nullable": true
                    },
                    "slack_subdomain": {
                        "type": "string",
                        "nullable": true
                    },
                    "slack_webhook_url": {
                        "format": "uri",
                        "type": "string"
                    },
                    "ssh_keys": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "test": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "vcs_type": {
                        "type": "string"
                    },
                    "vcs_url": {
                        "format": "uri",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Projects": {
                "items": {
                    "properties": {
                        "aws": {
                            "properties": {
                                "keypair": {
                                    "type": "string",
                                    "nullable": true
                                }
                            },
                            "type": "object"
                        },
                        "branches": {
                            "type": "object"
                        },
                        "campfire_notify_prefs": {
                            "type": "string",
                            "nullable": true
                        },
                        "campfire_room": {
                            "type": "string",
                            "nullable": true
                        },
                        "campfire_subdomain": {
                            "type": "string",
                            "nullable": true
                        },
                        "campfire_token": {
                            "type": "string",
                            "nullable": true
                        },
                        "compile": {
                            "type": "string"
                        },
                        "default_branch": {
                            "type": "string"
                        },
                        "dependencies": {
                            "type": "string"
                        },
                        "extra": {
                            "type": "string"
                        },
                        "feature_flags": {
                            "properties": {
                                "build-fork-prs": {
                                    "type": "boolean"
                                },
                                "fleet": {
                                    "type": "boolean",
                                    "nullable": true
                                },
                                "junit": {
                                    "type": "boolean"
                                },
                                "oss": {
                                    "type": "boolean"
                                },
                                "osx": {
                                    "type": "boolean"
                                },
                                "set-github-status": {
                                    "type": "boolean"
                                },
                                "trusty-beta": {
                                    "type": "boolean"
                                }
                            },
                            "type": "object"
                        },
                        "flowdock_api_token": {
                            "type": "string",
                            "nullable": true
                        },
                        "followed": {
                            "type": "boolean"
                        },
                        "has_usable_key": {
                            "type": "boolean"
                        },
                        "heroku_deploy_user": {
                            "type": "string",
                            "nullable": true
                        },
                        "hipchat_api_token": {
                            "type": "string",
                            "nullable": true
                        },
                        "hipchat_notify": {
                            "type": "string",
                            "nullable": true
                        },
                        "hipchat_notify_prefs": {
                            "type": "string",
                            "nullable": true
                        },
                        "hipchat_room": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_channel": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_keyword": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_notify_prefs": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_password": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_server": {
                            "type": "string",
                            "nullable": true
                        },
                        "irc_username": {
                            "type": "string",
                            "nullable": true
                        },
                        "language": {
                            "type": "string"
                        },
                        "oss": {
                            "type": "boolean"
                        },
                        "parallel": {
                            "type": "integer"
                        },
                        "reponame": {
                            "type": "string"
                        },
                        "scopes": {
                            "items": {
                                "enum": [
                                    "write-settings",
                                    "view-builds",
                                    "read-settings",
                                    "trigger-builds",
                                    "all",
                                    "status",
                                    "none"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "setup": {
                            "type": "string"
                        },
                        "slack_api_token": {
                            "type": "string",
                            "nullable": true
                        },
                        "slack_channel": {
                            "type": "string",
                            "nullable": true
                        },
                        "slack_channel_override": {
                            "type": "string",
                            "nullable": true
                        },
                        "slack_notify_prefs": {
                            "type": "string",
                            "nullable": true
                        },
                        "slack_subdomain": {
                            "type": "string",
                            "nullable": true
                        },
                        "slack_webhook_url": {
                            "format": "uri",
                            "type": "string"
                        },
                        "ssh_keys": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "test": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "vcs_type": {
                            "type": "string"
                        },
                        "vcs_url": {
                            "format": "uri",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "type": "array"
            },
            "Revision": {
                "description": "The specific revision to build.\nDefault is null and the head of the branch is used. Cannot be used with tag parameter.\n",
                "type": "string"
            },
            "Scope": {
                "enum": [
                    "write-settings",
                    "view-builds",
                    "read-settings",
                    "trigger-builds",
                    "all",
                    "status",
                    "none"
                ],
                "type": "string"
            },
            "Sha1": {
                "type": "string"
            },
            "Status": {
                "enum": [
                    "retried",
                    "canceled",
                    "infrastructure_fail",
                    "timedout",
                    "not_run",
                    "running",
                    "failed",
                    "queued",
                    "scheduled",
                    "not_running",
                    "no_tests",
                    "fixed",
                    "success"
                ],
                "type": "string"
            },
            "StringOrNull": {
                "type": "string",
                "nullable": true
            },
            "Tag": {
                "description": "The tag to build. Default is null. Cannot be used with revision parameter.\n",
                "type": "string"
            },
            "Tests": {
                "properties": {
                    "tests": {
                        "items": {
                            "properties": {
                                "classname": {
                                    "type": "string"
                                },
                                "file": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "result": {
                                    "enum": [
                                        "retried",
                                        "canceled",
                                        "infrastructure_fail",
                                        "timedout",
                                        "not_run",
                                        "running",
                                        "failed",
                                        "queued",
                                        "scheduled",
                                        "not_running",
                                        "no_tests",
                                        "fixed",
                                        "success"
                                    ],
                                    "type": "string"
                                },
                                "run_time": {
                                    "type": "number"
                                },
                                "source": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "admin": {
                        "type": "boolean"
                    },
                    "all_emails": {
                        "items": {
                            "format": "email",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "analytics_id": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "format": "uri",
                        "type": "string"
                    },
                    "basic_email_prefs": {
                        "type": "string"
                    },
                    "bitbucket": {
                        "type": "integer",
                        "nullable": true
                    },
                    "bitbucket_authorized": {
                        "type": "boolean"
                    },
                    "containers": {
                        "type": "integer"
                    },
                    "created_at": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "days_left_in_trial": {
                        "type": "integer"
                    },
                    "dev_admin": {
                        "type": "boolean"
                    },
                    "enrolled_betas": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "github_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "github_oauth_scopes": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "gravatar_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "heroku_api_key": {
                        "type": "string",
                        "nullable": true
                    },
                    "in_beta_program": {
                        "type": "boolean"
                    },
                    "login": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "organization_prefs": {
                        "type": "object"
                    },
                    "parallelism": {
                        "type": "integer"
                    },
                    "plan": {
                        "type": "string",
                        "nullable": true
                    },
                    "projects": {
                        "type": "object"
                    },
                    "pusher_id": {
                        "type": "string"
                    },
                    "selected_email": {
                        "format": "email",
                        "type": "string"
                    },
                    "sign_in_count": {
                        "type": "integer"
                    },
                    "trial_end": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "envvar": {
                "description": "XXX",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "envvars": {
                "description": "XXX",
                "content": {
                    "application/json": {
                        "schema": {
                            "items": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    }
                }
            },
            "key": {
                "description": "checkout key",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "fingerprint": {
                                    "type": "string"
                                },
                                "preferred": {
                                    "type": "boolean"
                                },
                                "public_key": {
                                    "type": "string"
                                },
                                "time": {
                                    "description": "when the key was issued",
                                    "format": "date-time",
                                    "type": "string"
                                },
                                "type": {
                                    "description": "can be \"deploy-key\" or \"github-user-key\"\n",
                                    "enum": [
                                        "deploy-key",
                                        "github-user-key"
                                    ],
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "branch": {
                "description": "The branch name should be url-encoded.\n",
                "in": "path",
                "name": "branch",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "build_num": {
                "description": "XXXXXXXXXX\n",
                "in": "path",
                "name": "build_num",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "envvar_name": {
                "description": "XXXXXXXXXX\n",
                "in": "path",
                "name": "name",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "filter": {
                "description": "Restricts which builds are returned.\nSet to \"completed\", \"successful\", \"failed\", \"running\", or defaults to no filter.\n",
                "in": "query",
                "name": "filter",
                "schema": {
                    "type": "string",
                    "enum": [
                        "completed",
                        "successful",
                        "failed",
                        "running"
                    ]
                }
            },
            "fingerprint": {
                "description": "XXXXXXXXXX\n",
                "in": "path",
                "name": "fingerprint",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "limit": {
                "description": "The number of builds to return. Maximum 100, defaults to 30.\n",
                "in": "query",
                "name": "limit",
                "schema": {
                    "type": "integer",
                    "maximum": 100,
                    "default": 30
                }
            },
            "offset": {
                "description": "The API returns builds starting from this offset, defaults to 0.\n",
                "in": "query",
                "name": "offset",
                "schema": {
                    "type": "integer",
                    "default": 0
                }
            },
            "project": {
                "description": "XXXXXXXXX\n",
                "in": "path",
                "name": "project",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "username": {
                "description": "XXXXXXXXX\n",
                "in": "path",
                "name": "username",
                "required": true,
                "schema": {
                    "type": "string"
                }
            }
        },
        "securitySchemes": {
            "apikey": {
                "in": "query",
                "name": "circle-token",
                "type": "apiKey"
            }
        }
    }
}